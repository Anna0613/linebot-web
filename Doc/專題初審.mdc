銘傳大學	資訊管理學系
114 學年度專題研究



專題研究名稱：
LINE Bot 製作輔助系統



  指導老師：黃莉君 教授
組長：	11130820 王采沄 資管三丙
組員：	11130243 蔡立緯 資管三丙
  	11130713 林家丞 資管三丙
   11130872 林昀澤 資管三丙
   11131230 林容嘉 資管三丙
   11131335 張芷瑄 資管三丙




中華民國114年5月9日
中文摘要
    隨著 LINE 的普及，帶動了個人與企業採用 LINE Bot 進行互動式服務，LINE Bot 可提供即時訊息發送、個人化訊息以及具備豐富的內容格式提升社群互動，因此許多企業主和個人經營者都把 LINE Bot 視為資訊發布與行銷的重要資訊管道，舉凡金融業的客戶服務與行銷運用、教育體系的輔助教學以及醫療衛教和掛號運用等各領域的應用都相當普遍且常見。然而，對於大型機構的企業單位可將 LINE Bot 的建置與經營交由專業的資訊公司負責，但若創業初期的個人經營者、想節省經費的企業經營者或是個人店家，則可能會有經濟預算的考量以及創業初期需要積極行銷公司名聲的需求，再加上當今多數的經營者可能不具備資訊背景。在對於 LINE Bot 程序不熟悉、不會寫程式、無相關預算以及人力不足的情況之下，建立 LINE Bot 是一項挑戰，本研究的目的是設計並開發一個 LINE Bot 製作輔助系統，以幫助無程式背景的使用者輕鬆建立自己的 LINE Bot，建立一個不用寫程式就可以打造專屬 LINE Bot 機器人的輔助系統，透過輔助系統提供簡便的 LINE Bot 建置步驟指引，讓經營者從註冊到部署的實務操作更簡便，能輕鬆開發企業所需的相關功能，以能創造經營者更好的行銷與經營績效。
英文摘要
    With the popularity of LINE, individuals and businesses have adopted LINE Bot for interactive services, LINE Bot can provide instant messaging, personalized messaging, and rich content formats to enhance community interaction, so many business owners and individual operators regard LINE Bot as an important information channel for information release and marketing, such as customer service and marketing in the financial industry, auxiliary teaching in the education system, medical and health education, and registration applications are quite common and common. However, in the case of large organizations, the construction and operation of LINE Bot can be entrusted to a professional information company, but if you are an individual business owner in the early stage of your business, a business owner who wants to save money, or a private store, you may have to consider your budget and actively market your company's reputation in the early stage of your business, and most of today's managers may not have an information background. The purpose of this research is to design and develop a LINE Bot creation assistance system to help users without programming to easily build their own LINE Bot, and to build an assistance system that allows users to create their own Line Bot without writing a program. It makes it easier for operators to perform from registration to deployment, and can easily develop relevant functions required by enterprises, so as to create better marketing and business performance for operators. 


目錄
中文摘要	i
英文摘要	ii
表次	v
圖次	vii
第一章 緒論	1
第一節 研究背景	1
第二節 研究動機	2
第三節 研究目的	3
第四節 研究貢獻	4
第五節 題目描述	5
第二章 相關理論與文獻探討	7
第一節 系統開發與相關技術	7
第二節 相關系統功能比較	9
第三節 本研究所提出的系統優化與提升方案	13
第三章 系統架構	23
第一節 系統功能及系統架構圖	23
第二節 使用案例圖	25
第三節 使用案例說明	29
第四節 活動圖	48
第五節 系統循序圖	52
第六節 系統需求說明	57
第七節 功能規格書	59
第八節 非功能規格書	61
第九節 可行性分析	63
第四章 預期研究成果	66
參考文獻	67



表次
表2-1不同網站的功能比較	12
表2-2 網站入口與主頁導引設計優化比較表	14
表2-3 改善原本建立LINE Bot 頁面比較表	17
表2-4 改善原先設計LINE Bot頁面比較表	19
表2-5 改善修改LINE Bot功能比較表	21
表2-6 過去建立步驟與本系統建立步驟之比較表	21
表3-1 註冊使用案例表	29
表3-2登入使用案例表	30
表3-3帳號資料維護使用案例表	31
表3-4帳號驗證使用案例表	33
表3-5忘記密碼使用案例表	34
表3-6我的 LINE Bot 使用案例表	36
表3-7部屬 LINE Bot 使用案例表	37
表3-8查看互動數據使用案例表	38
表3-9停用／刪除 Bot 使用案例表	39
表3-10生成報表使用案例表	39
表3-11管理系統使用案例表	40
表3-12建立 LINE Bot 使用案例表	41
表3-13開始設計 LINE Bot 使用案例表	42
表3-14測試 LINE Bot 使用案例表	43
表3-15修改 LINE Bot 使用案例表	44
表3-16修改個人資料使用案例表	45
表3-17綁定/中斷 LINE 帳號使用案例表	45
表3-18刪除帳號使用案例表	46
表3-19驗證使用案例表	47
表3-20開發端系統需求說明	57
表3-21使用端系統需求說明	58
表3-22首頁功能規格	59
表3-23製作介面功能規格	60
表3-24非功能規格書	61
表3-25軟體預期成本表	63
表3-26硬體預期成本表	64
圖次
圖2-1 網路搜尋頁面	14
圖2-2 LINE Developers 網站	15
圖2-3 Visual Studio Code 網站	15
圖2-4 ngrok 網站	15
圖2-5 Unraid 網站	16
圖2-6 Portainer 網站	16
圖2-7 Cloudflare 網站	16
圖2-8 網站註冊頁面	14
圖2-9 網站登入頁面	15
圖2-10 網站主頁面	15
圖2-11 進入LINE Bot 管理介面	17
圖2-12 建立群組	17
圖2-13 選擇Messaging API	18
圖2-14 填寫公司資料	18
圖2-15 複製Channel access token	18
& Channel secret	18
圖2-16 如何建立LINE Bot頁面	17
圖2-17 建立LINE Bot頁面	17
圖2-18 建立LINE Bot頁面操作範例說明	18
圖2-19 需寫程式與邏輯並下載相對應套件	19
圖2-20 編輯 Flex Message 並放入相對應位置	20
圖2-21 開始設計 LINE Bot 頁面	19
圖2-22 開始設計 LINE Bot 頁面操作範例說明	20
圖2-23 修改 LINE Bot 程式碼	21
圖2-24 修改 LINE Bot 頁面	21
圖2-25 修改 LINE Bot 頁面操作範例說明	21
圖3-1 系統架構圖	25
圖3-2 帳號管理系統使用案例圖	27
圖3-3 LINE Bot 管理系統使用案例圖	28
圖3-4 LINE Bot 編輯系統使用案例圖	28
圖3-5 設定管理系統使用案例圖	29
圖3-6 用戶操作活動圖	49
圖3-7 建立LINE Bot流程活動圖	50
圖3-8 拖曳式設計活動圖	51
圖3-9 修改活動圖	52
圖3-10註冊系統循序圖	53
圖3-11登入系統循序圖	54
圖3-12 LINE 登入系統循序圖	55
圖3-13建立 LINE Bot 系統循序圖	55
圖3-14設計 LINE Bot 系統循序圖	56
圖3-15建立 LINE Bot 系統循序圖	57


	第一章 緒論
   本研究旨在探討如何簡化Python LINE Bot 的建置流程，特別針對無程式基礎的使用者設計，讓他們也能夠輕鬆上手，成功打造出屬於自己的自動化訊息服務系統。本章節將從三個面向說明研究方向與規劃，分別為：研究背景、研究動機，以及研究目的。
第一節 研究背景
   隨著即時通訊軟體的普及，LINE 已成為亞洲多數國家中最具代表性的社群平台之一。根據 imBee (imBee，一百零九年) 發布的 LINE 2022 統計數據大全顯示，LINE 的全球每月活躍用戶已突破 1.82 億，並支援 17 種語言，廣泛使用於日本、台灣、泰國等地區，成為各年齡層日常通訊的重要工具。在台灣，LINE 的滲透率更是驚人。根據 TechOrange (TechOrange 科技報橘，一百一十二年) 報導，台灣每月活躍用戶高達 2200 萬人，占全國人口的 93%，顯示其在本地社交、溝通與商業訊息傳遞中扮演著舉足輕重的角色。
   LINE 除了作為個人間的通訊工具外，其延伸服務如 LINE Official Account 與 LINE Bot，更進一步強化了企業與顧客之間的互動關係。企業與組織可藉由 LINE Bot 自動化發送訊息、提供即時客服、執行行銷任務與會員管理等功能，大幅提升營運效率。然而，當前市面上所提供的 Python  LINE Bot 開發工具對非技術背景者而言仍存在許多門檻。以 LINE 官方推出的 LINE Bot Designer 為例，雖然具備部分可視化操作，但功能侷限且缺乏擴充彈性；其他如 Azure Bot Service、iota C.ai 等工具雖功能齊全，但操作流程繁複且使用成本高昂，對於資源有限的中小型企業與個人創業者而言並不友善。因此，需要一個成本低、操作簡便且針對初學者設計的 LINE Bot 建置平台。
第二節 研究動機
   在數位轉型浪潮推動下，企業與商家越來越重視與顧客之間的即時互動與關係維繫。LINE 平台作為高滲透率的溝通媒介，自然成為許多商家導入LINE Bot 的首選工具。然而，要建立一個多功能的 Python LINE Bot 系統，往往需要具備前後端程式撰寫能力與 API 整合經驗，這對於多數無資訊背景的商家而言，形成明顯的技術障礙。
   目前市面上的解決方案多針對中大型企業開發，提供的功能繁雜且設計偏向專業使用者，一般小型商家即便能負擔相關費用，也常因操作複雜而感到困難與挫折。這種落差不僅阻礙了數位工具的普及，也限制了 Python LINE Bot 在基層商業活動中的應用潛力。因此，本研究的動機在於開發一個以圖形化操作為核心，並專門為初學者設計的輔助平台，協助商家快速建置屬於自己的 LINE Bot，讓數位行銷不再是技術專家的專利，而能普及至更多有創意與需求的使用者手中。
第三節 研究目的
   本研究的主要目的是開發一個無需撰寫程式碼即可使用的 LINE Bot 製作輔助系統，讓任何有行銷需求或訊息自動化需求的使用者，即便不具備資訊背景，也能簡單上手，設計出符合自身需求的 Bot 功能。本系統以「降低技術門檻」、「簡化設計流程」與「提升應用效率」為核心目標，協助中小型商家與個人創業者進行品牌經營與顧客互動。具體目標如下：
一、設計視覺外觀和按鍵功能
　　透過淺顯易懂的介面設計和圖形化按鍵，使用者可以輕鬆設定自己想要的 LINE Bot 的訊息、互動選單、按鈕樣式與對話流程，實現個性化的使用者互動體驗。
二、管理後台功能
　　本系統提供使用者一個友善的介面，能夠直觀的管理 LINE Bot 權限和進行監控，同時能夠保存每位使用者的用戶資料、互動紀錄等，讓用戶不需接觸複雜的資料庫。
三、簡易快速建立機器人
　　幫助使用者快速創建自己的 LINE Bot，透過直覺化的介面操作，只需拖曳與點選即可完成設定，大幅降低操作難度。使用者無需接觸任何程式碼，只需依照系統引導，即可用最少的步驟建立基本功能，如自動回覆、歡迎訊息與按鈕選單等。除此之外，系統也提供多樣化的樣板與外觀設定功能，讓使用者能夠自行選擇 LINE Bot 的外觀與風格設定。
第四節 研究貢獻
   本研究旨在降低非程式背景使用者建立 LINE Bot 的門檻，透過整合前後端技術與友善操作介面，具體貢獻如下：
一、開發低門檻的 LINE Bot 建置輔助平台
	本研究設計一套無需撰寫程式碼即可建構 LINE Bot 的系統，透過圖形化介面與模組化操作流程，幫助中小型企業或個人店家快速部署行銷機器人，有效降低技術學習成本。
二、整合前後端技術打造完整系統架構
	前端採用 React 框架搭配 Tailwind CSS 完成模組設計與畫面呈現，後端則以 Python 與 Flask 架構 API 溝通介面，並使用 PostgreSQL 作為資料庫，確保系統穩定性與擴充性。
三、部署實體伺服器與資料管理優化
	本研究將系統部署於 Unraid NAS 上，提供穩定的運作平台，同時整合使用者資料儲存與操作紀錄管理，提升資訊保全與使用效能。
第五節 題目描述
   本研究致力於打造一套以圖形化介面為核心的 LINE Bot 建置輔助系統，讓缺乏程式背景的使用者也能輕鬆上手。為實現系統穩定性與操作便捷性，本團隊選擇以 Visual Studio Code 為開發平台，採用 React.js 作為前端框架，透過 Tailwind CSS 建構簡潔直覺的畫面介面，後端則以 Python 串接 Flask 架構 API 完成前後端溝通，並結合 PostgreSQL 作為資料儲存系統。系統最終部署於 Unraid NAS 伺服器中，以確保高可用性與穩定的資料運行環境。
   本系統的核心設計分為四大主要區域功能，涵蓋從註冊到功能編輯的完整流程，具體內容如下：
一、是如何建立（註冊與連動說明區）
   提供使用者清楚明確的註冊流程指引，包含 LINE Developers 平台的申請教學與 Channel 設定步驟，同時說明如何將建立好的機器人連動到本系統內部，以完成初步設定連結。此區域包含圖文教學與互動提示，有助於降低第一次使用者的學習成本。
二、建立（LINE Bot 設定區）
	使用者可透過本區模組進行 LINE Bot 初步設定，包括名稱、自定義圖片、使用者歡迎詞與預設回應等功能。透過簡單填表及模組選擇方式，使用者可依需求建立屬於自己品牌或商家的基本機器人外框架與初始功能。
三、開始設計（互動流程設計區）
	此區域提供拖曳式區塊操作介面，支援使用者自訂回覆邏輯、按鈕配置與 Flex Message 設計。可自由加入「單一訊息回應」、「圖片回覆」、「多選按鈕」、「跳轉選單」等功能模組，實現多樣互動情境。模組排列與邏輯結構皆以視覺化方式呈現，降低設計難度並提升操作效率。
四、修改（後續維護與分析區）
	本區域協助使用者針對已部署的 LINE Bot 進行功能修改與更新，包含對話流程調整、圖片替換、回覆邏輯優化等。系統也提供互動記錄的簡易統計功能，讓使用者掌握 Bot 使用成效，並針對高頻問題或常見互動模式進行優化，提升顧客滿意度與經營效益。
第二章 相關理論與文獻探討
第一節 系統開發與相關技術
一、 LINE Bot Designer
	LINE Bot Designer 是 LINE 官方推出的一項實用工具，專門為希望建構 LINE Bot 的使用者所設計。此工具提供可視化的操作介面，使用者可以透過圖形化方式設計對話流程，模擬機器人與用戶之間的互動，並即時測試回應結果。這種不需撰寫程式碼的設計，對於初學者來說相當友善，降低了開發門檻，使更多非技術背景者也能嘗試建立屬於自己的 Bot。該工具特別適合用於快速原型開發與對話流程規劃，尤其適用於教育訓練、初期功能展示或是內部測試使用。
   然而，LINE Bot Designer 的功能以基礎為主，若要進一步擴充例如整合資料庫、進行條件式判斷或串接外部 API 等功能，就必須撰寫 JavaScript  或使用 LINE Messaging API 進行進階開發。這限制了其在實務應用中的彈性與延展性。根據 LINE（LINE ，一百一十一年）所提供的資訊，該工具雖然方便上手，但在開發完整功能型 Bot 系統方面，仍具有一定的技術侷限性。
二、 iota C.ai
	iota C.ai 是由叡揚資訊推出的企業級對話服務平台，主打「無需程式碼」即可打造智慧對話機器人。其最大的特點是支援圖形化的流程設計，使用者可藉由拖拉式的模組操作，自由設計聊天邏輯與應答結構。平台內建自然語言處理（NLP）技術，可自動理解並處理使用者輸入的語句，讓對話內容更加自然流暢。此外，iota C.ai 支援與多種主流通訊軟體整合，如 LINE、Facebook Messenger、Microsoft Teams 等，同時也可應用於企業內部通訊工具，如 Intranet、企業協作平台等，有助於提升內部流程的自動化與效率。
   根據叡揚資訊（叡揚資訊，一百一十一年）資料顯示，iota C.ai 的目標市場主要為中大型企業客戶，所提供的功能雖然豐富且強大，但對於剛起步的創業者、小型商家或不具備技術團隊的個人而言，其複雜性與高額費用可能成為門檻。我們本研究所設計的系統，則更著重於「簡單」、「快速」與「低技術門檻」，透過模組化設計、即時預覽與導引操作介面，協助使用者一步步完成機器人建立，不但容易上手，亦降低維護與操作難度，適合初學者與資源有限的使用者。
三、 Azure Bot
	Azure Bot Service 是由微軟（Microsoft）提供的一套雲端型對話機器人建置與部署平台，屬於 Azure 生態系統的一部分。該平台支援跨平台部署，使用者可以開發一個機器人，並同時應用於多個通訊平台，如 Microsoft Teams、Skype、Facebook Messenger、Slack 等，確保訊息傳遞的一致性與互動體驗的統一性。Azure Bot 也與 Microsoft Cognitive Services 深度整合，例如使用 LUIS（Language Understanding Intelligent Service）進行語意分析與意圖辨識，進一步提升 Bot 的智慧化程度與應用範圍。在資安方面，Azure  提供多層級的保護機制，從身份驗證、資料加密到雲端威脅監控皆有完善方案，可協助企業有效抵禦快速變化的資安威脅。
   Jonathan Fingold 等 9 人（JonathanFingold et al., 2024）在其研究中指出，Azure Bot Service 在處理大量用戶請求與企業級整合應用方面表現優異，是企業部署自動化客服與智慧服務的理想選擇。然而，由於其技術架構較為複雜，設定與開發過程對於初學者來說門檻較高，加上相關功能需依照使用量計費，對中小型商家或一般個人用戶而言，成本與技術負擔皆較重。因此，與本研究所開發的系統相比，Azure Bot 更適合具有開發資源與規模需求的大型組織使用。
第二節 相關系統功能比較
   本研究彙整目前市面上三款主流 LINE Bot 開發工具，包括 LINE Bot Designer、iota C.ai 與 Azure Bot Service，針對其主要功能進行系統性比較。比較的重點聚焦於系統是否具備可視化設計、自動回覆與客製化功能，並依據這些功能評估其使用友善性與實務應用性。如表2-1所見，本研究依據以下功能進行比較：
一、 可視化設計
   此功能對於沒有資訊背景的使用者而言尤其重要，因為它大幅降低了操作的學習門檻，使使用者能夠更直觀地理解整體架構與互動邏輯。市面上如 LINE Bot Designer 雖提供基本的視覺化操作界面，但僅限於簡單的流程設計，無法支援進階邏輯與複合動作。
   而本研究開發的系統預計進一步優化此功能，導入「積木式拖曳」設計概念，使用者只需將代表各項功能的模組方塊拖曳至工作區，即可組合出完整的對話流程與互動邏輯。此設計不僅保留視覺化的直覺操作，同時也提升邏輯結構的彈性與擴充性，讓使用者即使不具備程式經驗，也能夠建構複雜、專業的對話服務。
二、 自動回覆功能
   此功能使得 Bot 能夠根據使用者輸入的關鍵字、詞組或訊息內容，自動回應預設訊息，提供即時、準確的回覆。這項功能不僅能降低客服人力負擔，也可於非上班時段自動提供使用者所需資訊，有效提升使用者滿意度與服務可得性。
   本研究系統將整合 LINE Messaging API、Python Flask 與 LINE Bot SDK 建立穩定且高效的自動回覆邏輯。系統會提供關鍵字設定功能與常見問題模組，讓使用者可依業務類型快速新增與編輯常見回覆，不需撰寫程式碼即可建立自動應答流程。此項設計可廣泛應用於店家營業資訊查詢、訂單查詢、服務引導等場景，幫助商家實現數位化的顧客服務。
三、 客製化功能
   能夠根據品牌特性與使用者需求進行個性化設計，已成為對話機器人成功的關鍵。客製化功能允許用戶依據自身需求，自行設定回覆流程、訊息內容、選單結構與外觀風格，使機器人更符合品牌形象與使用情境。
   在現有工具中，像是 Azure Bot 支援高度自定義，但其使用門檻高、需進行程式開發與平台整合，不利於非技術背景者使用。相比之下，本研究所開發的系統將透過模組選擇與參數設定方式，讓使用者不需透過複雜語法，即可利用 LINE Messaging API 與 Webhook 完成流程設計。系統介面將提供多組模板與色彩配置選項，協助用戶打造風格一致、專業感強的互動體驗。
四、 測試與調試
   該功能提供即時的測試和調適工具，使用戶能夠在設計過程中隨時檢查和調整對話流程，透過即時的預覽可讓用戶進行及時修改與測試。這有助於快速發現和解決潛在的問題，確保最終機器人的穩定性和流暢性，從而提高了整體開發效率。我們的網站在拖曳完積木後可以直接從旁邊的預覽畫面看到剛剛選的功能在機器人裡長什麼樣子，方便用戶確認是否符合預期效果。
　　LINE Bot Designer 針對初學者設計，操作簡單，但功能基礎且仍需撰寫程式碼，對無技術背景者有一定挑戰。iota C.ai 提供拖拉式介面與自動化語言處理技術，無需撰寫程式即可建構跨平台對話機器人，適合快速部署的企業。然而，高度自動化限制了進一步的客製化能力。Azure Bot 則以高安全性與跨平台整合能力著稱，適合需處理大量數據且注重安全的企業，但技術門檻較高，對不熟悉開發的用戶不友好。
　　綜合比較，LINE Bot Designer 簡單易用但功能有限，iota C.ai 強調無程式設計和多平台支援，Azure Bot 以安全性與一致性為優勢。這些平台各具特色，但目前缺乏一個專為 LINE 平台設計，結合拖曳式操作、無需程式設計且兼具高安全性與客製化的完整解決方案。
　　本網站將整合這些平台的優勢並改善其不足，為用戶提供一個直觀易用、安全高效的 LINE Bot 設計工具，滿足新手與進階用戶的多樣需求，進一步推動 LINE Bot 應用的普及與創新。
表2-1不同網站的功能比較
功能

相關系統可視化設計自動回覆功能客製化功能測試與調試本網站OOOOLINE Bot DesignerOO△Oiota C.aiOO△OAzure BotXOOO資料來源：本研究整理 X：不具備此功能，△：具備部分功能，O：具備此功能
第三節 本研究所提出的系統優化與提升方案
   在傳統的 LINE Bot 建置流程中，各項設定環節通常需要具備一定程度的程式設計與系統操作能力，對於缺乏經驗或無技術背景的一般使用者來說，無疑是一項極具挑戰性的任務。因此，本研究針對這些痛點進行分析，並針對使用者在初次接觸系統時的第一印象體驗進行優化，以下為本研究於第一階段所提出的具體改善方案：
【步驟一：網站入口與主頁導引設計優化】原本建置問題與後來改善問題
原本建置問題：使用者需自行搜尋零散的線上資源來了解 Python LINE Bot 的建置方式（參見圖2-9），缺乏明確的操作脈絡與整體性流程指引。多數初學者在實際操作時，往往需來回切換多個平台（參見圖2-1～圖2-6）完成帳號註冊、API 連接與伺服器部署等基本設定。即便進入系統後，原有平台多以模組分散形式呈現，使用者往往需多次嘗試與點選才能找到對應功能，不僅耗時，也易產生誤操作或設定遺漏的情況，進而降低整體使用意願與體驗。
改善後：為解決上述問題，本研究設計網站入口與主頁結構，採用集中式與視覺化的導引邏輯進行規劃，強調「一站式整合」、「任務導引明確」與「介面簡潔直觀」三大原則。首先，在網站首頁即整合登入與註冊功能，用戶可直接建立帳號與驗證登入，無需跳轉至外部平台或自行設定開發環境（參見圖2-8、圖2-9），有效降低使用門檻。其次，主頁面集中呈現所有核心功能模組，包含 LINE Bot 建立、互動流程設計、自動回覆設定等，並搭配視覺圖示與清楚標籤，以提升功能辨識度與操作效率（參見圖2-10）。使用者只需依照首頁的邏輯引導，即可循序完成建置流程，省去頻繁查找與切換頁面的困擾。
表2-2 網站入口與主頁導引設計優化比較表
改善前：原本建置畫面與流程說明改善後：本研究畫面
圖2-1 網路搜尋頁面

圖2-2 LINE Developers 網站

圖2-3 Visual Studio Code 網站

圖2-4 ngrok 網站

圖2-5 Unraid 網站

圖2-6 Portainer 網站

圖2-7 Cloudflare 網站
圖2-8 網站註冊頁面

圖2-9 網站登入頁面

圖2-10 網站主頁面【步驟二：建立LINE Bot頁面】原本建置問題與後來改善問題
原本建置問題： 使用者需要自行摸索整個建置邏輯，從進入 LINE Developers 控制台、申請 Messaging API、建立群組、填寫公司資料，到最後尋找並複製 Channel access token、Channel secret 等必要金鑰（參見圖2-11～圖2-15），整體操作流程雖然步驟固定，但其操作介面繁雜且資訊分散，對新手用戶而言是一大挑戰。尤其在沒有明確操作引導的情況下，使用者很容易錯過關鍵欄位或貼錯金鑰欄位，進而導致無法正確連接 Bot，甚至無法成功啟用服務。
改善後：本系統提供了操作引導頁面，並整合建立流程至單一介面，使用者只需依指示填入必要欄位，包括輸入 API Key 金鑰以便用來做安全識別與提供權限的識別碼，輸入 Channel access token 與 Channel secret 用來提供與 LINE Bot 進行連接與核對安全密鑰的部分（參見圖2-16～圖2-18）。
表2-3 改善原本建立LINE Bot 頁面比較表
改善前：原本建置畫面與流程說明改善後：本研究畫面
圖2-11 進入LINE Bot 管理介面

圖2-12 建立群組

圖2-13 選擇Messaging API

圖2-14 填寫公司資料

圖2-15 複製Channel access token 
& Channel secret
圖2-16 如何建立LINE Bot頁面

圖2-17 建立LINE Bot頁面

圖2-18 建立LINE Bot頁面操作範例說明【步驟三：設計 LINE Bot 頁面】原本建置問題與後來改善問題
原本建置問題：使用者需要自行撰寫程式碼來設計機器人的訊息格式與互動邏輯，並需安裝相關開發工具與套件，對於不熟悉程式語言的用戶來說是一大門檻（參見圖2-19、圖2-20）。稍有疏忽便可能導致訊息格式錯誤或邏輯無法執行，影響機器人的正常運作，也大幅延長了開發時間與測試週期。
改善後：本研究開發的系統導入拖曳式設計工具，使用者無需撰寫任何程式碼，即可透過積木式操作界面設計對話邏輯與訊息內容。將原本需透過程式編輯的 Flex Message 模板，轉換為圖像化模組，用戶只需將功能方塊拖曳至設計區，即可設定文字、圖片、按鈕與跳轉邏輯（參見圖2-21、圖2-22）。這樣的設計大幅降低了使用門檻，讓初學者也能輕鬆完成複雜的互動設計，提升設計效率並降低錯誤發生機率。
表2-4 改善原先設計LINE Bot頁面比較表
改善前：原本建置畫面與流程說明改善後：本研究畫面
圖2-19 需寫程式與邏輯並下載相對應套件

圖2-20 編輯 Flex Message 並放入相對應位置
圖2-21 開始設計 LINE Bot 頁面

圖2-22 開始設計 LINE Bot 頁面操作範例說明【步驟四：修改 LINE Bot】原本建置問題與後來改善問題
原本建置問題：修改 LINE Bot 功能是一項繁瑣且技術門檻較高的工作。使用者需要先手動進入開發環境修改原始程式碼，再進行映像檔重新打包與上傳至伺服器，過程不僅繁複，也容易出現錯誤（參見圖2-23）。對於缺乏相關經驗的使用者來說，這種流程不僅難以掌握，還可能因操作不當導致原有功能中斷或錯誤更新，進而影響實際服務的穩定性。
改善後：為解決上述問題，本研究設計出集中式的 LINE Bot 管理介面，整合所有可修改的設定項目，包含 LINE Bot 的名稱、對話邏輯及訊息內容。使用者只需透過簡單的「選擇」或「編輯」按鈕，即可對指定區塊進行修改，無需重新開啟開發環境或手動編譯映像檔。系統設計採用即時儲存與同步更新機制，用戶在完成修改後變更內容即自動套用，無需重新部署，降低錯誤風險並大幅提升維護效率（參見圖2-24、圖2-25 所示）。
表2-5 改善修改LINE Bot功能比較表
改善前：原本建置畫面與流程說明改善後：本研究畫面
圖2-23 修改 LINE Bot 程式碼
圖2-24 修改 LINE Bot 頁面

圖2-25 修改 LINE Bot 頁面操作範例說明
表2-6 過去建立步驟與本系統建立步驟之比較表
特性傳統 LINE Bot 建立步驟本研究規劃建立 LINE Bot 的步驟技術門檻高，需要具備程式設計、API 使用、伺服器部屬等相關知識低，無需程式設計背景，透過視覺化介面操作建立時間較長，需要撰寫、測試和部屬程式碼較短，透過直覺化介面操作，快速建立基本功能維護和更新需要自行維護程式碼和伺服器，並因應 LINE API 的更新進行調整由平台提供維護和更新，使用者無需擔心技術問題適用對象具備程式設計和技術背景的開發者或企業不熟悉程式碼，但有 LINE Bot 行銷需求的商家或個人介面通常需要透過程式碼命令列操作，較不直觀提供視覺化介面，操作直觀易懂資料庫管理需要自行設計和管理資料庫平台提供後台介面管理使用者資料和互動紀錄
第三章 系統架構
   本章節將說明本研究所開發之 LINE Bot 輔助系統的整體架構與運作流程。除了介紹系統建置所依賴的技術與開發工具外，也將探討實際開發過程中所使用的關鍵框架與整合方式，並評估其未來在功能擴展性與系統維運方面的潛力。
第一節 系統功能及系統架構圖
一、 用戶資訊
(一) 帳號資料：用於登入網站系統、管理個人帳號與驗證身分，並儲存使用者的基本聯絡資訊、登入紀錄等。
(二) API 資料：建立 LINE Bot 前，需先取得使用者所申請的 Channel secret、Channel access token 等，並透過系統引導將其正確填入以完成後續連接。
二、 建立 LINE Bot
   傳統建立 LINE Bot 需手動進行平台設定與程式編寫，流程繁瑣。本系統將其整合為一站式操作流程，讓使用者只需依指示填寫必要欄位，即可快速完成機器人建構。此模組強調使用簡單、介面直覺，適用於所有程度的使用者。
三、 架設與管理 LINE Bot 伺服器
   為解決使用者無法自行部署伺服器的困境，本系統整合後端伺服器建置與操作模組，提供自動化與可視化的建置流程。
(一)建立伺服器：使用者只需透過網站中的此功能，即可簡易快速的建立一個運行 LINE Bot 的伺服器。
(二)管理伺服器：使用者可以透過本網站管理自己的伺服器，進行新增/刪除伺服器的動作。 
四、 建立與管理 LINE Bot 資料庫
   原先建立資料庫的過程相當繁雜，透過本功能可省去建立資料庫環境繁雜的步驟，以及新增/管理資料庫的複雜介面，與維護資料庫的時間成本。
(一)建立資料庫：輸入所需儲存的資料項目、名稱，即可建立好相對應的資料表，並架設好環境。
(二)管理資料庫：可透過本網站修改資料表項目、名稱，以及新增修改刪除查詢的簡易資料庫功能。
五、 Flex Messages 訊息框設計/建立
   本功能使用拖曳式的設計，讓設計 Flex Message 變得更簡單，當建立好一個 Flex Message 後，系統會自動把設計好的 Flex Message 放入主程式內，避免手動處理 JSON 碼和與 LINE Bot 程式的結合。
六、 LINE Bot 後台管理
(一) LINE Bot 修改：透過本功能可以對之前所建立的 LINE Bot 的功能、邏輯進行修改。
(二)數據管理：可透過本功能查看該 LINE Bot 的使用者，以及總體數據，如：回覆的訊息、回覆率等。
下圖為上述功能之系統架構圖。

圖3-1 系統架構圖
第二節 使用案例圖
使用案例說明: 以使用案例圖呈現系統功能與使用者間的互動關係。以橢圓形表示各項功能或模組，火柴人(使用者)代表與系統互動的角色。使用者與功能間的線條表示操作關係，功能間的連線則代表資料流程或功能依賴關係。
一、 帳號管理系統使用案例圖
   帳號管理子系統中，使用者可透過註冊功能建立個人帳號，並於完成後登入系統進行後續操作。登入過程中，系統會驗證使用者輸入的帳號與密碼，並確認其有效性。若使用者忘記密碼，可透過「忘記密碼」功能啟動驗證流程以重設密碼。此外，登入成功後，使用者亦可進一步修改帳號資料。以上為帳號管理系統的功能，使用案例圖（參見圖3-2所示）。

圖3-2 帳號管理系統使用案例圖
二、 LINE Bot 管理系統使用案例圖
   LINE Bot 管理系統提供使用者查看與管理已建立之 Bot，包括部署、查詢互動數據、停用刪除及報表匯出等功能。使用者亦可透過「部署 LINE Bot」功能將新 Bot 上架，並透過「管理系統」進行後端整合與設定。整體功能結構以模組化設計呈現，提升管理效率與使用彈性。以上為 LINE Bot 管理系統的功能，使用案例圖（參見圖3-3所示）。

圖3-3 LINE Bot 管理系統使用案例圖
三、 LINE Bot 編輯系統使用案例圖
   LINE Bot 編輯系統提供使用者建立與設計機器人流程的編輯功能。使用者可依序進行建立、設計與測試 Bot 的操作，並透過整合的編輯模組進行訊息邏輯與流程調整。系統透過模組化設計整合編輯功能，提升操作便利性與設計效率。以上為 LINE Bot 編輯系統的功能，使用案例圖（參見圖3-4所示）。

圖3-4 LINE Bot 編輯系統使用案例圖
四、 LINE Bot 設定管理系統使用案例圖
   LINE Bot 設定管理系統提供使用者進行帳號與個人資料的設定維護。使用者可修改個人資料、綁定或解除 LINE 帳號，並執行帳號刪除等操作。所有操作皆需經過驗證機制以確保資訊安全與權限正確。以上為 LINE Bot 設定管理系統的功能，使用案例圖（參見圖3-5所示）。

圖3-5 LINE Bot 設定管理系統使用案例圖
第三節 使用案例說明
一、 帳號管理系統使用案例說明
表3-1 註冊使用案例表
使用案例名稱註冊使用案例描述使用者進行註冊，以儲存資訊主要參與者使用者利害關係人與目標使用者：將資訊儲存於系統中，避免資訊遺失，並能使用後續功能前置條件使用者登入系統，並且之前無登入紀錄後置條件系統正確儲存使用者輸入資訊，並給予使用者後續操作權限主要成功情節使用者系統1.進入本系統網頁
2.點選註冊
3.輸入 Email、帳號、密碼，並點選註冊按鍵1.接收使用者輸入之 Email、帳號、密碼
2.進行會員資料檢查(在其他需求中說明)
3送出註冊請求至伺服器，並取得伺服器端回應
4.顯示註冊成功訊息畫面例外情節如果無網路連線其他需求1.註冊所需輸入項目包含 Email、帳號、密碼
2.帳號不得與其他使用者帳號重複
3.密碼只允許有英文、數字，需符合長度規範（如 8-16 字元）
表3-2登入使用案例表
使用案例名稱登入使用案例描述登入帳號後，可使用網頁所有功能主要參與者使用者利害關係人與目標使用者：登入可以查看個人資訊前置條件註冊完成，已成為會員後置條件系統能夠正確的顯示會員的資訊主要成功情節使用者系統1.進入本系統網頁
2.點選註冊登入按鍵
3.輸入帳號、密碼，並點選登入按鍵1.接收使用者輸入之帳號、密碼
2.送出登入請求至伺服器，並取得伺服器端回應
3.顯示登入成功訊息畫面
4.若會員登入資料不存在，則畫面顯示帳戶不存在例外情節其他需求

表3-3帳號資料維護使用案例表
使用案例名稱帳號資料維護使用案例描述使用者修改自己的帳號資料（如 Email、密碼等），以更新系統內的個人資訊主要參與者使用者利害關係人與目標使用者：更新資訊以確保帳號資料正確與安全，提升使用體驗前置條件使用者已登入系統，且帳號為有效狀態後置條件系統正確儲存使用者更新後的資料，並顯示更新成功訊息主要成功情節使用者系統1.進入本系統網頁
2.點選帳號資料修改功能
3.修改Email、密碼等欄位，並點選儲存按鈕1.接收使用者輸入之新資料
2.驗證新資料（如 Email格式正確性、密碼規則等）
3.更新使用者帳號資料至伺服器
4. 顯示修改成功訊息畫面例外情節若輸入資料格式錯誤或與現有資料重複，提示使用者修正後重新提交其他需求Email 須符合 Email 格式規範，密碼仍只允許由英文與數字組成；若未修改任何資料，不允許提交更新
表3-4帳號驗證使用案例表
使用案例名稱帳號驗證使用案例描述驗證使用者輸入之 Email、帳號或密碼是否符合格式規範，並檢查帳號是否存在或重複，以確保資料正確性與系統安全性主要參與者使用者利害關係人與目標系統：確保輸入資料有效，避免錯誤資料進入資料庫，維護資料正確性與安全性前置條件使用者已輸入需要驗證之欄位資料（如 Email、帳號、密碼）後置條件系統完成資料驗證，並回應驗證結果（成功或失敗）主要成功情節使用者系統1.輸入 Email、帳號或密碼等資料
2.提交表單進行驗證
1.接收使用者輸入資料
2.驗證各欄位格式是否正確（如 Email 格式、密碼是否包含英文與數字）
3.檢查帳號是否已存在（在註冊流程中）
4.回應驗證成功訊息或提示錯誤項目例外情節若格式錯誤或帳號已重複，系統提示對應錯誤訊息，要求使用者修正其他需求1.Email 需為有效格式（包含 @ 與網域）
2.帳號不得與其他使用者重複
3.密碼僅允許英文與數字，且需符合長度規範（如 8-16 字元）
4.錯誤提示需清楚指出錯誤項目與修改建議
表3-5忘記密碼使用案例表
使用案例名稱忘記密碼使用案例描述使用者因忘記密碼，透過系統流程重設密碼，以恢復帳號使用權限主要參與者使用者利害關係人與目標使用者：能順利找回帳號密碼，繼續使用系統功能
系統：驗證使用者身分，確保密碼重設流程安全無誤前置條件使用者點選忘記密碼功能，並輸入註冊時使用的 Email 或帳號後置條件系統成功驗證使用者身分後，完成密碼重設，並通知使用者主要成功情節使用者系統1.進入系統登入頁面
2.點選「忘記密碼」連結
3.輸入 Email 或帳號並提交1.接收使用者輸入資料
2.驗證輸入的 Email 或帳號是否存在
3.發送重設密碼的驗證信（含連結或驗證碼）至使用者 Email
4.使用者依指示完成新密碼設定
5.顯示重設密碼成功訊息，導回登入頁面例外情節1.輸入的 Email 或帳號不存在，系統提示錯誤
2.驗證碼過期或錯誤，要求重新操作其他需求1.新密碼需符合系統密碼規範（只允許英文與數字，8-16 字元）
2.驗證信須設定有效期限（如 30 分鐘）
3.重設過程中需加密處理，保障資料安全
二、 LINE Bot 管理系統使用案例說明
表3-6我的 LINE Bot 使用案例表
使用案例名稱我的 LINE Bot使用案例描述使用者查看目前已部署的 LINE Bot 清單及其狀態主要參與者使用者利害關係人與目標使用者：掌握目前管理中的所有 LINE Bot 狀態前置條件使用者已登入並具有瀏覽權限後置條件系統顯示可用的 Bot 清單與相關資訊主要成功情節使用者系統1.進入本系統網頁
2.點選「我的 LINE Bot」功能1. 擷取資料庫中的 Bot 清單
2. 顯示 Bot 名稱、狀態、ID  等詳細資訊例外情節資料擷取失敗或無可用 Bot，顯示對應訊息其他需求資料需即時更新
表3-7部屬 LINE Bot 使用案例表
使用案例名稱部屬 LINE Bot使用案例描述使用者新增並部署一個新的 LINE Bot 至平台主要參與者使用者利害關係人與目標使用者：擴展服務功能並快速上線 LINE Bot前置條件使用者具有部署權限並已取得 LINE Bot 所需資訊（如 Channel access token、Channel secret）後置條件LINE Bot 成功建立主要成功情節使用者系統1.進入本系統網頁
2.點選「部屬 LINE Bot」
3.輸入必要參數與名稱
4.送出部屬請求1.驗證資料正確性
2.部屬 LINE Bot 至平台
3.回傳成功訊息並更新  LINE Bot 清單例外情節參數錯誤或重複，顯示錯誤提示其他需求須驗證 Channel access token 與 secret 正確性，避免部署失敗
表3-8查看互動數據使用案例表
使用案例名稱查看互動數據使用案例描述使用者查看某個 LINE Bot 的使用者互動數據，如訊息數、使用者數等主要參與者使用者利害關係人與目標使用者：掌握 LINE Bot 效果與使用情況，便於優化策略前置條件使用者已選擇特定 LINE Bot 並具有分析權限後置條件系統顯示所選 LINE Bot 的互動數據圖表主要成功情節使用者系統1.點選「查看互動數據」
1.查詢該 LINE Bot 的互動紀錄
2.顯示統計資料（圖表或表格）例外情節資料不足或查詢失敗，顯示錯誤訊息其他需求支援選擇日期範圍與資料匯出功能
表3-9停用／刪除 Bot 使用案例表
使用案例名稱停用／刪除 Bot使用案例描述使用者選擇停用或永久刪除某個已部署的 LINE Bot主要參與者使用者利害關係人與目標使用者：清除不再使用的 Bot，維護平台整潔與效能前置條件使用者已選定特定 Bot 並具有停用／刪除權限後置條件該 Bot 從系統中移除主要成功情節使用者系統1.選擇目標 Bot 並執行停用／刪除操作1.執行狀態更新或資料刪除動作
2.顯示操作成功訊息例外情節其他需求刪除動作需二次確認，避免誤操作；重要資料須備份
表3-10生成報表使用案例表
使用案例名稱生成報表使用案例描述使用者依需求產生 LINE Bot 的互動報表主要參與者使用者利害關係人與目標使用者：快速取得營運報告或分析文件前置條件已選擇目標 LINE Bot 並指定報表條件後置條件系統產生報表並提供下載或檢視主要成功情節使用者系統1.選擇報表條件（日期範圍、項目）
2.點選產生報表1.擷取資料並製作報表
2.顯示下載連結或報表畫面例外情節報表內容為空或資料錯誤，顯示提示訊息其他需求支援匯出格式（如 PDF、Excel）
表3-11管理系統使用案例表
使用案例名稱管理系統使用案例描述使用者進行平台級的系統管理作業，如帳號權限設定、系統參數維護等主要參與者使用者（管理者）利害關係人與目標管理者：維護平台正常運作與安全性前置條件使用者具有管理者角色後置條件系統成功儲存設定與更新，影響即時生效主要成功情節使用者系統1.進入「管理系統」後台
2.選擇功能（帳號、權限、設定）進行操作1.驗證操作權限
2.儲存設定並回饋成功訊息例外情節權限不足、儲存失敗，顯示錯誤或禁止訊息其他需求所有管理操作需有日誌記錄；設定變更須有版本備份
三、 LINE Bot 編輯系統使用案例說明
表3-12建立 LINE Bot 使用案例表
使用案例名稱建立 LINE Bot使用案例描述使用者建立一個新的 LINE Bot 以供後續設計與測試主要參與者使用者利害關係人與目標使用者：建立新專案並準備進行 Bot 開發前置條件使用者已登入並具有建立權限後置條件系統建立一個新的 LINE Bot 專案並儲存初始資訊主要成功情節使用者系統1.點選「建立 Line Bot 」
2.輸入 LINE Bot 名稱與描述1.檢查名稱是否重複
2.建立 LINE Bot 專案並回傳 ID例外情節名稱重複或欄位未填寫完整其他需求LINE Bot 名稱需唯一且不得為空，描述為選填
表3-13開始設計 LINE Bot 使用案例表
使用案例名稱開始設計 LINE Bot使用案例描述使用者編排 LINE Bot 的對話流程與功能模組主要參與者使用者利害關係人與目標使用者：自定義 LINE Bot前置條件已成功創建一個 LINE Bot 專案後置條件LINE Bot 設計內容儲存在系統中，供後續測試與部署主要成功情節使用者系統1.選取 LINE Bot 進入設計介面
2.拖拉模組建立流程
3.參考預覽式結果1.即時儲存設計變更
2.驗證流程邏輯是否正確例外情節模組設置錯誤或流程環節未連接完成，提示使用者其他需求支援圖形化介面、模組拖拉與版本控制功能
表3-14測試 LINE Bot 使用案例表
使用案例名稱測試 LINE Bot使用案例描述使用者在開發環境中模擬與 LINE Bot 的互動測試主要參與者使用者利害關係人與目標使用者：確認 LINE Bot 流程設計是否正確，邏輯是否如預期前置條件LINE Bot 已完成設計並可執行後置條件使用者可取得測試回饋資訊並進行修正主要成功情節使用者系統1.進入測試介面
2.輸入模擬訊息進行互動1.根據目前設計邏輯回應訊息
2.顯示訊息流程與模組紀錄例外情節LINE Bot 設計錯誤導致無回應或回應異常其他需求提供測試日誌與訊息軌跡檢視功能
表3-15修改 LINE Bot 使用案例表
使用案例名稱修改 LINE Bot使用案例描述修改系統提供各種編輯功能，支援 LINE Bot 的設計、調整與管理主要參與者修改系統利害關係人與目標修改系統：支援使用者在不同階段的修改需求前置條件使用者已進入建立、設計或測試流程後置條件LINE Bot 專案內容變更並儲存於系統主要成功情節使用者系統1.成功在建立、設計或測試功能模組做編輯1.接收來自建立、設計或測試功能模組的請求
2.開啟對應的修改功能與視圖
3.執行資料寫入與儲存例外情節權限不足或儲存錯誤導致變更失敗其他需求編輯功能需模組化、支援即時儲存與回復歷史版本
四、 LINE Bot 設定管理系統使用案例說明
表3-16修改個人資料使用案例表
使用案例名稱修改個人資料使用案例描述使用者可修改其註冊時填寫的個人資料（如 Email、暱稱等）主要參與者使用者利害關係人與目標使用者：確保個人資料正確與最新，以利通知與系統辨識前置條件使用者已登入並通過驗證後置條件系統更新並儲存使用者最新資料主要成功情節使用者系統1.進入個人資料頁面
2.修改需要的欄位
3.點擊儲存1.驗證輸入資料格式
2.更新資料庫內容
3.顯示修改成功訊息例外情節輸入格式錯誤（如 Email 格式錯誤）、儲存失敗其他需求Email 必須為有效格式，不可與其他帳戶重複
表3-17綁定/中斷 LINE 帳號使用案例表
使用案例名稱綁定/中斷 LINE 帳號使用案例描述使用者可將其帳號與 LINE 帳號綁定或解除綁定主要參與者使用者利害關係人與目標使用者：整合 LINE 功能與帳號資料
系統：可識別 LINE 使用者身分前置條件使用者已登入系統與 LINE 帳號後置條件綁定：帳號與 LINE 連結成功
中斷：關聯關係解除主要成功情節使用者系統1.點選「綁定 LINE 帳號」
2.授權 LINE 帳號1.取得 LINE 使用者資料
2.綁定帳號與資料
3.顯示綁定成功訊息
（中斷流程相同但刪除綁定紀錄）例外情節綁定時未授權成功或 LINE 帳號已被其他帳號綁定其他需求每個 LINE 帳號僅可綁定一個系統帳號
表3-18刪除帳號使用案例表
使用案例名稱刪除帳號使用案例描述使用者可選擇永久刪除其帳號與相關資料主要參與者使用者利害關係人與目標使用者：終止使用服務並移除個資
系統：清除相關資料以符合法規前置條件使用者已登入，並完成身分驗證後置條件使用者資料從系統中移除且無法復原主要成功情節使用者系統1.進入帳號設定
2.點選「刪除帳號」
3.二次確認1.進行驗證
2.清除使用者資料與紀錄
3.顯示刪除完成訊息例外情節驗證失敗或系統刪除資料異常其他需求顯示「帳號將永久刪除且無法復原」的提醒，需二次確認動作
表3-19驗證使用案例表
使用案例名稱驗證使用案例描述系統確認使用者身分或輸入資料的正確性（如帳號登入、資料修改時）主要參與者使用者利害關係人與目標使用者：保護帳號安全
系統：防止未授權使用或資料異常前置條件使用者提交需驗證的資料後置條件驗證成功或給予失敗提示主要成功情節使用者系統1.輸入帳號、密碼或驗證碼1.驗證資料是否正確
2.若成功，執行後續動作（登入、修改、刪除等）例外情節密碼錯誤、驗證碼過期或錯誤其他需求密碼與驗證碼需加密傳輸，驗證失敗次數過多可鎖定帳戶
第四節 活動圖
(一)用戶操作活動圖	

圖3-11 用戶操作活動圖
(二)建立LINE Bot流程活動圖

圖3-72 建立LINE Bot流程活動圖
(三)拖曳式設計活動圖

圖3-83 拖曳式設計活動圖
(四)修改活動圖

圖3-94 修改活動圖
第五節 系統循序圖
(一) 註冊
　　使用者在註冊頁面輸入帳號、密碼與 Email，系統前端先檢查格式，送出請求後後端檢查是否已有該帳號，若無則新增資料，並寄出驗證信。前端最後顯示註冊成功（參見圖3-10所示）。


圖3-10註冊系統循序圖
(二) 登入
　　使用者輸入帳密後，系統將請求傳至後端，後端檢查帳號是否存在，若密碼正確則回傳成功並導向主畫面，否則顯示錯誤訊息提示登入失敗（參見圖3-11所示）。

圖3-11登入系統循序圖
(三)LINE 登入
　　使用者點選「以 LINE 登入」，系統導向 LINE 授權頁面並取得用戶資訊。若 LINE ID 已綁定帳號，則直接登入；若無則建立新帳號後登入。最後導向主頁面或設計頁（參見圖3-12所示）。
   
圖3-12 LINE 登入系統循序圖
(四)建立 LINE Bot
   使用者輸入 Channel ID、Secret 等必要資料後送出，系統將資訊儲存到資料庫中，並初始化此 Bot 的基本資訊。建立成功後會自動跳轉進入設計頁面（參見圖3-13所示）。

圖3-13建立 LINE Bot 系統循序圖
(五)拖曳式設計 Bot 流程
    使用者從左側選單拖曳元件到畫布區，系統即時更新預覽畫面。當使用者點選「儲存」時，系統將目前畫布邏輯轉為 JSON 格式並送出後端儲存，最後顯示儲存成功提示。當使用者點選「匯出 JSON」時，顯示所儲存之資訊（參見圖3-14所示）。

圖3-14設計 LINE Bot 系統循序圖
(六)修改/刪除 Bot
　　使用者進入「修改 Bot」頁面，系統從資料庫取得使用者所有 Bot 清單。使用者點選某一項 Bot，系統將其對應邏輯從資料庫讀出並跳轉回編輯頁，讓使用者繼續設計與修改，也可在點選某一項 Bot 後進行刪除（參見圖3-15所示）。

圖3-15建立 LINE Bot 系統循序圖
第六節 系統需求說明
   本系統於開發端及使用端之開發環境如下:
(一)開發端
表3-20開發端系統需求說明
類別項目說明筆電硬體作業系統:Windows 11 家用版 64-bit
處理器：Intel(R) Core(TM) i7-12700H
記憶體 16.0 GB
儲存空間：1.5TB SSD
光碟機：無 
其他：讀卡機、顯示卡、音效卡、鍵盤、滑鼠、喇叭 軟體前端開發：Visual Studio Code
開發框架：React.js、Tailwind CSS
後端開發：Python 3.10 + Flask
API 測試工具：Postman
資料庫操作工具：pgAdmin、DBeaver伺服器軟體作業系統：Unraid 6.x
容器管理：Docker、Portainer
資料庫服務：PostgreSQL 14
反向代理與安全憑證：Nginx + Cloudflare
Webhook 轉址：Ngrok、Frp
(二)使用端
表3-21使用端系統需求說明
類別項目說明裝置硬體可使用筆記型電腦、桌上型電腦或手機裝置（需具備網路連線能力）瀏覽器軟體建議使用：Google Chrome、Microsoft Edge、Safari（需支援 ES6 與現代 CSS）作業系統軟體支援 Windows 10 以上、macOS 10.14 以上，或 Android/iOS 之現代瀏覽器環境使用方式網頁系統無需安裝 App，透過網頁瀏覽器開啟系統網址即可使用，支援響應式介面自動調整各裝置畫面比例
第七節 功能規格書
一、 首頁功能規格
表3-22首頁功能規格
編號功能名稱功能描述 功能實例01顯示網站介紹系統在首頁載入時，自動顯示產品主要功能說明。用戶進入網站首頁，可以看到產品特色與簡介說明。02顯示註冊與登入按鈕首頁右上角顯示「SIGN IN」與「JOIN US」按鈕，供用戶進行登入或註冊。用戶第一次使用，點「JOIN US」註冊新帳號。03開始設計快捷鍵點擊「開始設計」後導向到 Bot 設計介面。若未登入會要求先登入。用戶點擊「開始設計」，系統引導他先登入。04了解更多鍵點擊「了解更多」按鈕，跳轉到介紹更多產品細節的頁面。用戶想了解完整功能，點擊「了解更多」。05語言切換功能提供「中/英語」切換按鈕。用戶點擊「中」切換成中文介面。06客服聯繫 首頁右下角提供聯繫按鈕，有疑問可以聯繫客服。用戶遇到問題，點擊右下角聯繫客服。二、 製作介面功能規格
表3-23製作介面功能規格
編號功能名稱功能描述 功能實例07拼圖分類選單左側區塊提供模組分類（容器、區塊、元件、樣式），點選不同分類後顯示對應積木。用戶選擇「容器」後可以看到「單一訊息」「多重訊息」。08拼圖元件 用戶可以將積木從左側拖曳到中間的設計區進行設計。用戶將「垂直排列」拖進設計區，準備加入多個按鈕。09設計區設計區可自由拖曳與組合拼圖，支援放大/所小與複製/刪除。用戶在設計區中組合一個訊息結構，並且可以點擊右上角垃圾桶清除。10即時預覽區畫面右側可即時看到目前所設計內容的樣子。用戶設計完畢，可以在右側看到模擬訊息畫面。11匯出 JSON用戶點擊「匯出  JSON」按鈕，可以匯出 JSON 至 LINE Bot。用戶完成設計，點匯出 JSON，並將匯出至 LINE Bot 系統。
第八節 非功能規格書
表3-24非功能規格書
編號非功能性需求非功能性需求說明01可用性系統介面設計需簡潔直觀，所有主要功能模組須清楚標示，使用者能於首次使用時快速上手，減少學習成本。02可靠性系統應可穩定運作，提供高可用性服務；若發生系統中斷，應能於 24 小時內完成排除與回復，確保服務不中斷。03績效性系統需具備良好效能，在多使用者同時操作下仍能快速回應，前端操作延遲不得超過 2 秒，API 呼叫需在合理時間內完成。04安全性系統應保障會員資料隱私，所有個人資料僅限於使用者本人查閱與操作，並透過權限控管、防止未經授權之存取與外洩。05響應式設計系統介面需自動適應不同裝置（桌機、手機、平板），確保操作體驗一致。06擴充性系統架構需易於未來功能擴充，例如支援更多 Bot 平台或第三方 API 整合。07維護性程式碼需有良好註解與模組化設計，方便日後維護與功能升級。08備份機制系統需定期自動備份資料庫，確保資料安全與可回復性。
第九節 可行性分析
    可行性分析的主要目的是評估本專題是否能在合理範圍內成功實施，是否具備完成目標所需的條件與資源，以下我們將透過這四種可行性分析因素：經濟可行性、時程可行性、技術可行性及操作可行性來評估本專案是否能建立出此系統。
一、 經濟可行性
    為評估本專題是否具有經濟可行性，以下列出軟體及硬體成本做為參考之依據。
(一)軟體成本
    本系統採用以下開源或免費工具開發，因此可大幅降低軟體授權與維運成本，預期所需成本如表3-25所示。
表3-25軟體預期成本表
預期所使用之軟體預期成本Visual Studio Code免費PostgreSQL免費Unraid6000LINE免費資料來源:本專題整理
(二)硬體成本
    本專題預期使用一台伺服器、七台筆電用於開發此系統，成本如表3-26所示。
表3-26硬體預期成本表
預期所需求之硬體預期成本一台伺服器學校提供七台筆電學校提供與組員自有資料來源:本專題整理
二、 時程可行性
    系上公布的專研時程為三年級下學期至四年級上學期，而本研究於大二下學期開始進行主題討論，確立需求與方向，並初步完成功能規劃與技術評估。大三上學期完成系統的基本架設，包括伺服器、資料庫與介面設計。接下來於大三下學期專注於系統整合、測試與優化，確保功能穩定且符合使用者需求。預計整體開發過程約需 6 至 9 個月，並可在學期末進行成果展示與驗證。時程安排合理並留有充足時間進行調整與改進。

三、 技術可行性
	本研究在技術方面採用了穩定的開發工具與架構。前端部分運用  React.js 框架搭配 Tailwind CSS 進行畫面設計與操作介面建構，有助於快速完成介面與互動邏輯的實作。後端則以 Python 為核心語言，搭配 Flask 框架進行 API 建置，支援前後端資料互通，並可擴充為微服務架構，應對未來需求的變動與擴張。資料庫方面採用 PostgreSQL，具備高效能與高擴充性，適合儲存使用者互動記錄與後台設定資料。在伺服器架設部分，本系統部署於 Unraid NAS 上，提供穩定且可長時間運行的服務環境，具備基本的資料備援與遠端管理能力。綜合上述，本系統從開發到部署皆有完整的技術支撐，具備高度技術可行性。
四、 操作可行性
    本研究針對無資訊背景的中小企業主與個人商家所設計，強調「圖形化操作」、「模組化流程」與「簡化邏輯設計」，讓使用者能在無需撰寫任何程式碼的情況下，自行設計對話流程與按鈕互動功能，進一步完成 LINE Bot 的建立與部署。整體操作介面採用拖曳式設計，所有設定流程皆由步驟導引進行，並搭配圖文說明輔助操作，使用者僅需具備基本的網頁操作經驗，即可快速上手。此外，系統提供後台資料管理功能，使用者可輕鬆查詢使用紀錄與回應結果，不需接觸資料庫語法即可進行資料操作。此設計大幅提升了系統的可用性與接受度，也代表本研究在實務應用上具有相當高的操作可行性。
第四章 預期研究成果
　　過往由於LINE Bot 建置流程涉及程式撰寫與技術設定等複雜的步驟，讓不少使用者無法順利地完成 LINE Bot 的建置。本研究旨在讓無程式基礎的使用者也能夠自行建立機器人。為此，我們預期開發出具備以下功能的網站系統：(1)LINE Bot 外觀設計、(2)LINE Bot 運行邏輯設計、(3)簡易資料庫建立、(4)輔助架設 LINE Bot 伺服器、(5)LINE Bot 後台資料管理。
　　透過整合上述功能，本系統將有效簡化傳統開發流程，降低建置門檻，節省使用者在查找資料、安裝工具與學習程式語言上的大量時間與精力讓原本繁雜的設計過程變得更加易懂。預期成果包括：將原本繁雜的開發程序轉化為圖形化的操作經驗，使設計過程更為直觀易懂；並建立一個支援多樣功能的輔助平台，成為初學者進入 LINE Bot 開發領域的友善入門工具。此系統亦有助於推動自動化客服與數位行銷技術的普及，特別針對中小型商家、創業者與教育訓練場域，提供一個具實用性與推廣潛力的整合解決方案。
參考文獻
一、 中文部分
1. 犬哥網站，【 Figma 中文教學 】自學 UI / UX 設計必學軟體，完整功能分享！，犬哥網站，民國 114 年 4 月。
   https://frankknow.com/figma-tutorial/
2. 李明洲，即時通訊軟體建立生態系之策略分析 - 以 LINE 及其在台灣發展為例，國立臺灣大學管理學院商學研究所碩士論文，民國 112 年 7 月。
https://tdr.lib.ntu.edu.tw/retrieve/4250d5ac-36cd-4912-80dc-fd064b5a7101/ntu-111-2.pdf
3. 吳致賢，Python Flask REST API 筆記，Pala.tw，民國 108 年 1 月。
   https：//pala.tw/python-flask-rest-api/
4. 叡揚資訊，iota C.ai 對話服務平台，民國 111 年。
   https://www.gss.com.tw/product-services-nav/enterprice-e-app/iota
5. Enoxs，Python Flask 入門指南：輕量級網頁框架教學，Devs.tw 寫程式討論區，民國 111 年。
   https：//devs.tw/post/448
6. imBee，LINE 2022 統計數據大全，民國 109 年。
   https://www.imbee.io/resource/line-statistics-tc
7. Kelly CHI，Tailwind CSS 新手上路：概念、安裝與工具推薦，Medium，民國 112 年 11 月。
https://medium.com/@Kelly_CHI/tailwind-css-introduction-and-tools-68e770b2bf7f
8. LINE，Bot Designer，LINE Developers，民國 111 年 1 月。
   https://developers.line.biz/zh-hant/services/bot-designer/
9. Molly Chi，Python + Line bot 從頭開始建立一個 Line 機器人，部署到 Heroku！，Medium，民國 111 年 7 月。
https://molly1024.medium.com/python-%E8%88%87-line-bot-%E5%BE%9E%E9%A0%AD%E9%96%8B%E5%A7%8B%E5%BB%BA%E7%AB%8B%E4%B8%80%E5%80%8B-line-%E6%A9%9F%E5%99%A8%E4%BA%BA-%E9%83%A8%E7%BD%B2%E5%88%B0-heroku-51512b04cb7b
10. Ray，[Tools] API 測試工具 POSTMAN 基本操作，Medium，民國 112 年 12 月。
https://medium.com/@ray102467/tools-api-%E6%B8%AC%E8%A9%A6%E5%B7%A5%E5%85%B7-postman-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C-7340b1ac5be1
11. STEAM 教學網，發送 Flex Message，STEAM 教育學習網，民國 110  年。
   https://steam.oxxostudio.tw/category/python/example/line-flex-message.html
12. STEAM 教學網，積木種類，STEAM 教育學習網，民國 110 年。
   https://steam.oxxostudio.tw/category/scratch/code/blocks.html
13. STEAM 教學網，LINE BOT 教學，STEAM 教育學習網，民國 110 年。
   https://steam.oxxostudio.tw/category/python/example/line-bot.html
14. TechOrange，LINE 使用行為調查大公開！為何消費者追了品牌 FB 還想加入 LINE？，TechOrange 科技報橘，民國 112 年 11 月。
   https://buzzorange.com/techorange/2023/11/15/line-converge-2023/
15. Zac，LINE Bot 教學與應用，三甲科技 - 部落格，民國 110 年。
   https：//cms.aaasec.com.tw/index.php/2021/08/12/line-bot/
二、 英文部分
1. JonathanFingold, cyrilanderson, eric-urban, emgrol, erhopf, JKirsch1, EricDahlvang, Kaiqb and ivorb. "Basics of the Microsoft Bot Framework ", Microsoft Learn, 2024.
https://learn.microsoft.com/en-us/azure/bot-service/bot-builder-basics?view=azure-bot-service-4.0
2. LINE Developers, Messaging API reference, LINE Developers, 2025.
   https://developers.line.biz/en/reference/messaging-api/
3. MDN contributors, "CSS: Cascading Style Sheets", MDN Web Docs, 2025.
   https://developer.mozilla.org/en-US/docs/Web/CSS
4. MDN contributors, Getting started with React, MDN Web Docs, 2025.
https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Frameworks_libraries/React_getting_started
2



