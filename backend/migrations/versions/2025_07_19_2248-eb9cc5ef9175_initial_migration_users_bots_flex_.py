"""Initial migration: users, bots, flex_messages, bot_codes tables

Revision ID: eb9cc5ef9175
Revises: 
Create Date: 2025-07-19 22:48:25.927692

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eb9cc5ef9175'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('bot_codes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('bot_codes', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_bot_codes_bot_id', table_name='bot_codes')
    op.drop_index('idx_bot_codes_user_id', table_name='bot_codes')
    op.drop_index('ix_bot_codes_id', table_name='bot_codes')
    op.create_foreign_key(None, 'bot_codes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('bots', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('bots', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_bots_user_id', table_name='bots')
    op.drop_index('ix_bots_id', table_name='bots')
    op.drop_constraint('unique_bot_name_per_user', 'bots', type_='unique')
    op.add_column('flex_messages', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('flex_messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index('idx_flex_messages_user_id', table_name='flex_messages')
    op.drop_index('ix_flex_messages_id', table_name='flex_messages')
    op.drop_constraint('unique_message_name_per_user', 'flex_messages', type_='unique')
    op.drop_column('flex_messages', 'name')
    op.alter_column('line_users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('line_users_line_id_key', 'line_users', type_='unique')
    op.create_index(op.f('ix_line_users_line_id'), 'line_users', ['line_id'], unique=True)
    op.alter_column('users', 'avatar_updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index('idx_users_avatar_updated_at', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_email_verified', table_name='users')
    op.drop_index('idx_users_email_verified_status', table_name='users')
    op.drop_index('idx_users_last_verification_sent', table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_username_verified_status', table_name='users')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_index('idx_users_username_verified_status', 'users', ['username', 'email_verified'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index('idx_users_last_verification_sent', 'users', ['last_verification_sent'], unique=False)
    op.create_index('idx_users_email_verified_status', 'users', ['email', 'email_verified'], unique=False)
    op.create_index('idx_users_email_verified', 'users', ['email_verified'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_avatar_updated_at', 'users', ['avatar_updated_at'], unique=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'avatar_updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_index(op.f('ix_line_users_line_id'), table_name='line_users')
    op.create_unique_constraint('line_users_line_id_key', 'line_users', ['line_id'])
    op.alter_column('line_users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.add_column('flex_messages', sa.Column('name', sa.VARCHAR(length=255), server_default=sa.text("'Untitled Message'::character varying"), autoincrement=False, nullable=False))
    op.create_unique_constraint('unique_message_name_per_user', 'flex_messages', ['user_id', 'name'])
    op.create_index('ix_flex_messages_id', 'flex_messages', ['id'], unique=False)
    op.create_index('idx_flex_messages_user_id', 'flex_messages', ['user_id'], unique=False)
    op.alter_column('flex_messages', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_column('flex_messages', 'updated_at')
    op.create_unique_constraint('unique_bot_name_per_user', 'bots', ['user_id', 'name'])
    op.create_index('ix_bots_id', 'bots', ['id'], unique=False)
    op.create_index('idx_bots_user_id', 'bots', ['user_id'], unique=False)
    op.alter_column('bots', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('bots', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint(None, 'bot_codes', type_='foreignkey')
    op.create_index('ix_bot_codes_id', 'bot_codes', ['id'], unique=False)
    op.create_index('idx_bot_codes_user_id', 'bot_codes', ['user_id'], unique=False)
    op.create_index('idx_bot_codes_bot_id', 'bot_codes', ['bot_id'], unique=False)
    op.alter_column('bot_codes', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('bot_codes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    # ### end Alembic commands ###
